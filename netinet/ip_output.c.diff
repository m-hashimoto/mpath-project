--- ip_output.c.org	2005-02-24 17:01:11.000000000 +0900
+++ ip_output.c	2005-02-24 21:15:35.000000000 +0900
@@ -425,6 +425,7 @@
 	 * packet or packet fragments, unless ALTQ is enabled on the given
 	 * interface in which case packetdrop should be done by queueing.
 	 */
+	printf("ip_output: testprint 8\n");
 #ifdef ALTQ
 	if ((!ALTQ_IS_ENABLED(&ifp->if_snd)) &&
 	    ((ifp->if_snd.ifq_len + ip->ip_len / mtu + 1) >=
@@ -445,6 +446,7 @@
 	 * verify user is allowed to send
 	 * such a packet.
 	 */
+	printf("ip_output: testprint 9\n");
 	if (isbroadcast) {
 		if ((ifp->if_flags & IFF_BROADCAST) == 0) {
 			error = EADDRNOTAVAIL;
@@ -465,6 +467,7 @@
 	}
 
 sendit:
+	printf("ip_output: testprint 10\n");
 #ifdef IPSEC
 	switch(ip_ipsec_output(&m, inp, &flags, &error, &ifp)) {
 	case 1:
@@ -557,6 +560,7 @@
 #endif /* IPFIREWALL_FORWARD */
 
 passout:
+	printf("ip_output: passout\n");
 	/* 127/8 must not appear on wire - RFC1122. */
 	if ((ntohl(ip->ip_dst.s_addr) >> IN_CLASSA_NSHIFT) == IN_LOOPBACKNET ||
 	    (ntohl(ip->ip_src.s_addr) >> IN_CLASSA_NSHIFT) == IN_LOOPBACKNET) {
@@ -661,6 +665,7 @@
 		IPSTAT_INC(ips_fragmented);
 
 done:
+	printf("ip_output: done\n");
 	if (ro == &iproute && ro->ro_rt && !nortfree) {
 		RTFREE(ro->ro_rt);
 	}
@@ -668,6 +673,7 @@
 		ifa_free(&ia->ia_ifa);
 	return (error);
 bad:
+	printf("ip_output: bad\n");
 	m_freem(m);
 	goto done;
 }
