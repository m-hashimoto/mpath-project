--- in.c.orig	2011-01-19 02:33:13.000000000 +0900
+++ in.c	2011-01-19 13:39:44.000000000 +0900
@@ -1009,6 +1009,7 @@
 					 */
 					msg_rt.rt_gateway = 
 						(struct sockaddr *)&ia->ia_addr;
+					dprint(("in_addprefix: call rt_newaddrmsg(RTM_ADD)\n"));
 					rt_newaddrmsg(RTM_ADD, 
 						      (struct ifaddr *)target,
 						      0, &msg_rt);
@@ -1041,6 +1042,7 @@
 static int
 in_scrubprefix(struct in_ifaddr *target)
 {
+	dprint(("in_scrubprefix Start\n"));
 	struct in_ifaddr *ia;
 	struct in_addr prefix, mask, p;
 	int error;
@@ -1066,12 +1068,16 @@
 
 	if ((target->ia_flags & IFA_ROUTE) == 0) {
 		struct rtentry rt;
+		struct ptree_node rn;
 
 		/* QL: XXX
 		 * Report a blank rtentry when a route has not been
 		 * installed for the given interface address.
 		 */
 		bzero(&rt, sizeof(rt));
+		bzero(&rn, sizeof(rn));
+		rt.rt_nodes = &rn;
+		dprint(("in_scrubprefix: call rt_newaddrmsg(RTM_DELETE)\n"));
 		rt_newaddrmsg(RTM_DELETE, 
 			      (struct ifaddr *)target,
 			      0, &rt);
@@ -1111,10 +1117,12 @@
 #endif
 							) {
 			IN_IFADDR_RUNLOCK();
+			dprint(("in_scrubprefix: call rtinit RTM_DELETE 1\n"));
 			rtinit(&(target->ia_ifa), (int)RTM_DELETE,
 			    rtinitflags(target));
 			target->ia_flags &= ~IFA_ROUTE;
 
+			dprint(("in_scrubprefix: call rtinit RTM_ADD\n"));
 			error = rtinit(&ia->ia_ifa, (int)RTM_ADD,
 			    rtinitflags(ia) | RTF_UP);
 			if (error == 0)
@@ -1141,8 +1149,10 @@
 	/*
 	 * As no-one seem to have this prefix, we can remove the route.
 	 */
+	dprint(("in_scrubprefix: call rtinit RTM_DELETE 2\n"));
 	rtinit(&(target->ia_ifa), (int)RTM_DELETE, rtinitflags(target));
 	target->ia_flags &= ~IFA_ROUTE;
+	dprint(("in_scrubprefix End\n"));
 	return (0);
 }
 
