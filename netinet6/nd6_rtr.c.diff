--- nd6_rtr.c.orig	2005-01-26 12:24:20.000000000 +0900
+++ nd6_rtr.c	2005-02-27 03:35:26.000000000 +0900
@@ -53,7 +53,7 @@
 #include <net/if_types.h>
 #include <net/if_dl.h>
 #include <net/route.h>
-#include <net/radix.h>
+#include <net/ptree.h>
 #include <net/vnet.h>
 
 #include <netinet/in.h>
@@ -84,7 +84,7 @@
 static void in6_init_address_ltimes __P((struct nd_prefix *,
 	struct in6_addrlifetime *));
 
-static int rt6_deleteroute(struct radix_node *, void *);
+static int rt6_deleteroute(struct ptree_node *, void *);
 
 VNET_DECLARE(int, nd6_recalc_reachtm_interval);
 #define	V_nd6_recalc_reachtm_interval	VNET(nd6_recalc_reachtm_interval)
@@ -106,6 +106,7 @@
 #define RTPREF_RESERVED	(-2)
 #define RTPREF_INVALID	(-3)	/* internal */
 
+
 /*
  * Receive Router Solicitation Message - just for routers.
  * Router solicitation/advertisement is mostly managed by userland program
@@ -1557,10 +1558,11 @@
 	struct nd_prefix *opr;
 	u_long rtflags;
 	int error = 0;
-	struct radix_node_head *rnh;
+	struct ptree_node_head *rnh;
 	struct rtentry *rt = NULL;
 	char ip6buf[INET6_ADDRSTRLEN];
 	struct sockaddr_dl null_sdl = {sizeof(null_sdl), AF_LINK};
+	dprint(("nd6_prefix_onlink Start\n"));
 
 	/* sanity check */
 	if ((pr->ndpr_stateflags & NDPRF_ONLINK) != 0) {
@@ -1670,6 +1672,7 @@
 	if (ifa != NULL)
 		ifa_free(ifa);
 
+	dprint(("nd6_prefix_onlink End\n"));
 	return (error);
 }
 
@@ -2076,7 +2079,7 @@
 void
 rt6_flush(struct in6_addr *gateway, struct ifnet *ifp)
 {
-	struct radix_node_head *rnh;
+	struct ptree_node_head *rnh;
 	int s = splnet();
 
 	/* We'll care only link-local addresses */
@@ -2096,7 +2099,7 @@
 }
 
 static int
-rt6_deleteroute(struct radix_node *rn, void *arg)
+rt6_deleteroute(struct ptree_node *rn, void *arg)
 {
 #define SIN6(s)	((struct sockaddr_in6 *)s)
 	struct rtentry *rt = (struct rtentry *)rn;
