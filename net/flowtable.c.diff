--- flowtable.c.org	2005-01-24 17:59:50.000000000 +0900
+++ flowtable.c	2005-01-26 09:00:45.000000000 +0900
@@ -131,6 +131,8 @@
 #define	FIN_WAIT_IDLE		600
 #define	TCP_IDLE		SECS_PER_DAY
 
+#define DEBUG 1
+#define dprint(x) { if(DEBUG) printf x; }
 
 typedef	void fl_lock_t(struct flowtable *, uint32_t);
 typedef void fl_rtalloc_t(struct route *, uint32_t, u_int);
@@ -606,6 +608,7 @@
 int
 flowtable_lookup(struct flowtable *ft, struct mbuf *m, struct route *ro, uint32_t fibnum)
 {
+	dprint(("flowtable_lookup Start\n"));
 	uint32_t key[9], hash;
 	struct flentry *fle;
 	uint16_t flags;
@@ -647,6 +650,7 @@
 		goto uncached;
 	}
 keycheck:	
+	dprint(("flowtable_lookup: keycheck\n"));
 	rt = __DEVOLATILE(struct rtentry *, fle->f_rt);
 	lle = __DEVOLATILE(struct llentry *, fle->f_lle);
 	if ((rt != NULL)
@@ -662,6 +666,7 @@
 		ro->ro_rt = rt;
 		ro->ro_lle = lle;
 		FL_ENTRY_UNLOCK(ft, hash);
+		dprint(("flowtable_lookup End: lookup success\n"));
 		return (0);
 	} else if (fle->f_next != NULL) {
 		fle = fle->f_next;
@@ -670,6 +675,7 @@
 	FL_ENTRY_UNLOCK(ft, hash);
 
 uncached:
+	dprint(("flowtable_lookup: uncached\n"));
 	V_flowtable_misses++;
 	/*
 	 * This bit of code ends up locking the
@@ -684,6 +690,7 @@
 	 */
 
 	ft->ft_rtalloc(ro, hash, fibnum);
+	dprint(("flowtable_lookup: test print 1\n"));
 	if (ro->ro_rt == NULL) 
 		error = ENETUNREACH;
 	else {
@@ -691,10 +698,14 @@
 		struct sockaddr *l3addr;
 		struct rtentry *rt = ro->ro_rt;
 		struct ifnet *ifp = rt->rt_ifp;
+		
+		dprint(("flowtable_lookup: ifp = %p IFF_POINTTOPOINT | IFF_LOOPBACK = %d\n",ifp,IFF_POINTTOPOINT|IFF_LOOPBACK));
 
 		if (ifp->if_flags & (IFF_POINTOPOINT | IFF_LOOPBACK)) {
+			dprint(("flowtable_lookup: if_flags = 0x%x\n",ifp->if_flags));
 			RTFREE(rt);
 			ro->ro_rt = NULL;
+			dprint(("flowtable_lookup End: flags error\n"));
 			return (ENOENT);
 		}
 
@@ -702,17 +713,22 @@
 			l3addr = rt->rt_gateway;
 		else
 			l3addr = &ro->ro_dst;
+		
+		dprint(("flowtable_lookup: test print 4\n"));
 		llentry_update(&lle, LLTABLE(ifp), l3addr, ifp);
 		ro->ro_lle = lle;
 
 		if (lle == NULL) {
 			RTFREE(rt);
 			ro->ro_rt = NULL;
+			dprint(("flowtable_lookup End: lle == NULL\n"));
 			return (ENOENT);
 		}
+		dprint(("flowtable_lookup: test print 5\n"));
 		error = flowtable_insert(ft, hash, key, proto, fibnum,
 		    ro, flags);
 				
+		dprint(("flowtable_lookup: test print 6\n"));
 		if (error) {
 			RTFREE(rt);
 			LLE_FREE(lle);
@@ -721,6 +737,7 @@
 		}
 	} 
 
+	dprint(("flowtable_lookup End\n"));
 	return (error);
 }
 
@@ -1190,3 +1207,6 @@
 	}
 }
 #endif
+
+#undef DEBUG
+#undef dprint
