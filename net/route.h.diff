35a36
> 
127c128,130
< #include <net/radix.h>
---
> #include "opt_ptree.h"
> #include <net/ptree.h>
> #include <net/ptree_mpath.h>
133c136
< 	struct	radix_node rt_nodes[2];	/* tree glue, and other values */
---
> 	struct	ptree_node rt_nodes;	/* tree glue, and other values */
139,140c142,145
< #define	rt_key(r)	(*((struct sockaddr **)(&(r)->rt_nodes->rn_key)))
< #define	rt_mask(r)	(*((struct sockaddr **)(&(r)->rt_nodes->rn_mask)))
---
> #define	rt_key(r)		(*((struct sockaddr **)(&(r)->rt_nodes->key)))
> //#define	rt_keylen(r)	((int)(&(r)->rt_nodes->keylen))
> //#define	rt_mask(r)		(*((struct sockaddr **)(&(r)->rt_nodes->mask)))
> #define	rt_mask(r)		(*((struct sockaddr **)(&(r)->rt_mask)))
141a147
> 	struct	sockaddr *rt_mask;
151a158,160
> #ifdef PTREE_MPATH
> 	struct rtentry *mpath_array[];
> #endif
153a163
> 
376c386
< struct radix_node_head *rt_tables_get_rnh(int, int);
---
> struct ptree_node_head *rt_tables_get_rnh(int, int);
